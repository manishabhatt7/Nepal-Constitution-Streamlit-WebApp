2025-05-22 19:44:21,491 - INFO - app.py:425 - Streamlit: Starting initialization of the chatbot backend...
2025-05-22 19:44:21,491 - INFO - app.py:435 - Backend: Extracting and splitting PDF document...
2025-05-22 19:44:21,492 - INFO - app.py:83 - Starting PDF extraction from: Constitution-of-Nepal.pdf
2025-05-22 19:44:25,451 - INFO - app.py:122 - Successfully extracted text from 240 pages in 'Constitution-of-Nepal.pdf'.
2025-05-22 19:44:25,452 - INFO - app.py:132 - Splitting extracted documents into smaller chunks...
2025-05-22 19:44:25,482 - INFO - app.py:142 - Split documents into 586 chunks.
2025-05-22 19:44:25,483 - INFO - app.py:447 - Backend: Setting up Qdrant vector store...
2025-05-22 19:44:25,483 - INFO - app.py:158 - Setting up Qdrant vector store. Collection name: 'nepal_constitution_streamlit_v5_explained'
2025-05-22 19:44:26,898 - INFO - app.py:164 - Using OpenAI embedding model: 'text-embedding-ada-002' (Expected vector dimension: 1536)
2025-05-22 19:44:26,909 - ERROR - app.py:175 - Failed to connect to Qdrant or initial check failed: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.
2025-05-22 19:44:26,911 - CRITICAL - app.py:504 - Streamlit UI: Failed to initialize chatbot backend: Could not establish a connection with Qdrant at http://localhost:6333:6333. Details: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.
Traceback (most recent call last):
  File "C:\streamlit_app\app.py", line 168, in setup_qdrant_vector_store
    qdrant_db_client = QdrantClient(host=QDRANT_HOST, port=QDRANT_PORT, timeout=20) # Increased timeout
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\qdrant_client.py", line 140, in __init__
    self._client = QdrantRemote(
                   ^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\qdrant_remote.py", line 82, in __init__
    raise ValueError(
ValueError: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\streamlit_app\app.py", line 496, in run_constitution_chatbot_app
    ai_conversation_handler = initialize_chatbot_backend()
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 219, in __call__
    return self._get_or_create_cached_value(args, kwargs, spinner_message)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 261, in _get_or_create_cached_value
    return self._handle_cache_miss(cache, value_key, func_args, func_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 320, in _handle_cache_miss
    computed_value = self._info.func(*func_args, **func_kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\app.py", line 448, in initialize_chatbot_backend
    qdrant_knowledge_base = setup_qdrant_vector_store(text_chunks_from_pdf, OPENAI_API_KEY)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\app.py", line 176, in setup_qdrant_vector_store
    raise ConnectionError(f"Could not establish a connection with Qdrant at {QDRANT_HOST}:{QDRANT_PORT}. Details: {e}")
ConnectionError: Could not establish a connection with Qdrant at http://localhost:6333:6333. Details: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.
2025-05-22 19:48:50,513 - INFO - app.py:425 - Streamlit: Starting initialization of the chatbot backend...
2025-05-22 19:48:50,513 - INFO - app.py:435 - Backend: Extracting and splitting PDF document...
2025-05-22 19:48:50,514 - INFO - app.py:83 - Starting PDF extraction from: Constitution-of-Nepal.pdf
2025-05-22 19:48:54,826 - INFO - app.py:122 - Successfully extracted text from 240 pages in 'Constitution-of-Nepal.pdf'.
2025-05-22 19:48:54,826 - INFO - app.py:132 - Splitting extracted documents into smaller chunks...
2025-05-22 19:48:54,857 - INFO - app.py:142 - Split documents into 586 chunks.
2025-05-22 19:48:54,858 - INFO - app.py:447 - Backend: Setting up Qdrant vector store...
2025-05-22 19:48:54,859 - INFO - app.py:158 - Setting up Qdrant vector store. Collection name: 'nepal_constitution_streamlit_v5_explained'
2025-05-22 19:48:56,295 - INFO - app.py:164 - Using OpenAI embedding model: 'text-embedding-ada-002' (Expected vector dimension: 1536)
2025-05-22 19:48:57,410 - INFO - app.py:170 - Successfully connected to Qdrant server at localhost:6333.
2025-05-22 19:48:57,484 - INFO - app.py:206 - Collection 'nepal_constitution_streamlit_v5_explained' does not exist. Creating new collection.
2025-05-22 19:48:58,364 - INFO - app.py:222 - Populating Qdrant collection 'nepal_constitution_streamlit_v5_explained'. This may take time and incur API costs.
2025-05-22 19:48:58,365 - INFO - app.py:231 - Requesting embeddings for 586 chunks from OpenAI...
2025-05-22 19:49:06,757 - INFO - app.py:234 - Successfully received 586 embeddings from OpenAI.
2025-05-22 19:49:06,800 - INFO - app.py:261 - Adding 586 points to Qdrant collection 'nepal_constitution_streamlit_v5_explained'...
2025-05-22 19:49:07,440 - INFO - app.py:271 - Upserted batch 1 of 6 to Qdrant.
2025-05-22 19:49:07,970 - INFO - app.py:271 - Upserted batch 2 of 6 to Qdrant.
2025-05-22 19:49:09,043 - INFO - app.py:271 - Upserted batch 3 of 6 to Qdrant.
2025-05-22 19:49:09,439 - INFO - app.py:271 - Upserted batch 4 of 6 to Qdrant.
2025-05-22 19:49:09,905 - INFO - app.py:271 - Upserted batch 5 of 6 to Qdrant.
2025-05-22 19:49:10,281 - INFO - app.py:271 - Upserted batch 6 of 6 to Qdrant.
2025-05-22 19:49:10,282 - INFO - app.py:272 - All points successfully added to Qdrant.
2025-05-22 19:49:10,282 - INFO - app.py:289 - Qdrant vector store 'nepal_constitution_streamlit_v5_explained' is now ready for use by LangChain.
2025-05-22 19:49:10,299 - INFO - app.py:451 - Backend: Creating conversational AI chain...
2025-05-22 19:49:10,300 - INFO - app.py:302 - Setting up the conversational AI chain...
2025-05-22 19:49:11,109 - INFO - app.py:375 - Conversational AI chain created successfully.
2025-05-22 19:49:11,110 - INFO - app.py:454 - Streamlit: Chatbot backend initialized successfully and cached.
2025-05-22 19:53:16,186 - INFO - app.py:425 - Streamlit: Starting initialization of the chatbot backend...
2025-05-22 19:53:16,187 - INFO - app.py:435 - Backend: Extracting and splitting PDF document...
2025-05-22 19:53:16,187 - INFO - app.py:83 - Starting PDF extraction from: Constitution-of-Nepal.pdf
2025-05-22 19:53:21,182 - INFO - app.py:122 - Successfully extracted text from 240 pages in 'Constitution-of-Nepal.pdf'.
2025-05-22 19:53:21,183 - INFO - app.py:132 - Splitting extracted documents into smaller chunks...
2025-05-22 19:53:21,217 - INFO - app.py:142 - Split documents into 586 chunks.
2025-05-22 19:53:21,217 - INFO - app.py:447 - Backend: Setting up Qdrant vector store...
2025-05-22 19:53:21,218 - INFO - app.py:158 - Setting up Qdrant vector store. Collection name: 'nepal_constitution_streamlit_v5_explained'
2025-05-22 19:53:23,065 - INFO - app.py:164 - Using OpenAI embedding model: 'text-embedding-ada-002' (Expected vector dimension: 1536)
2025-05-22 19:53:24,155 - INFO - app.py:170 - Successfully connected to Qdrant server at localhost:6333.
2025-05-22 19:53:24,206 - ERROR - app.py:215 - An unexpected error occurred during Qdrant collection setup: 'CollectionParams' object has no attribute 'size'
Traceback (most recent call last):
  File "C:\streamlit_app\app.py", line 183, in setup_qdrant_vector_store
    if collection_details.config.params.size == EMBEDDING_MODEL_DIMENSION and \
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\pydantic\main.py", line 989, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'CollectionParams' object has no attribute 'size'
2025-05-22 19:53:24,212 - CRITICAL - app.py:504 - Streamlit UI: Failed to initialize chatbot backend: Unexpected error setting up Qdrant. Details: 'CollectionParams' object has no attribute 'size'
Traceback (most recent call last):
  File "C:\streamlit_app\app.py", line 183, in setup_qdrant_vector_store
    if collection_details.config.params.size == EMBEDDING_MODEL_DIMENSION and \
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\pydantic\main.py", line 989, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'CollectionParams' object has no attribute 'size'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\streamlit_app\app.py", line 496, in run_constitution_chatbot_app
    ai_conversation_handler = initialize_chatbot_backend()
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 219, in __call__
    return self._get_or_create_cached_value(args, kwargs, spinner_message)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 261, in _get_or_create_cached_value
    return self._handle_cache_miss(cache, value_key, func_args, func_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 320, in _handle_cache_miss
    computed_value = self._info.func(*func_args, **func_kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\app.py", line 448, in initialize_chatbot_backend
    qdrant_knowledge_base = setup_qdrant_vector_store(text_chunks_from_pdf, OPENAI_API_KEY)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\app.py", line 216, in setup_qdrant_vector_store
    raise RuntimeError(f"Unexpected error setting up Qdrant. Details: {e}")
RuntimeError: Unexpected error setting up Qdrant. Details: 'CollectionParams' object has no attribute 'size'
2025-05-22 20:06:00,917 - INFO - app.py:338 - Streamlit: Starting initialization of the chatbot backend...
2025-05-22 20:06:00,918 - INFO - app.py:343 - Backend: Extracting and splitting PDF document...
2025-05-22 20:06:00,919 - INFO - app.py:61 - Starting PDF extraction from: Constitution-of-Nepal.pdf
2025-05-22 20:06:06,855 - INFO - app.py:91 - Successfully extracted text from 240 pages in 'Constitution-of-Nepal.pdf'.
2025-05-22 20:06:06,856 - INFO - app.py:95 - Splitting extracted documents into smaller chunks...
2025-05-22 20:06:06,888 - INFO - app.py:103 - Split documents into 586 chunks.
2025-05-22 20:06:06,889 - INFO - app.py:352 - Backend: Setting up Qdrant vector store...
2025-05-22 20:06:06,889 - INFO - app.py:108 - Setting up Qdrant vector store. Collection name: 'nepal_constitution_streamlit_v5_explained'
2025-05-22 20:06:08,783 - INFO - app.py:113 - Using OpenAI embedding model: 'text-embedding-ada-002' (Expected vector dimension: 1536)
2025-05-22 20:06:09,970 - INFO - app.py:125 - Successfully connected to Qdrant server at localhost:6333.
2025-05-22 20:06:10,160 - INFO - app.py:143 - Collection 'nepal_constitution_streamlit_v5_explained' exists, is valid, and seems populated with 586 points. Reusing.
2025-05-22 20:06:10,161 - INFO - app.py:245 - Skipped embedding and upserting. Using existing data in collection 'nepal_constitution_streamlit_v5_explained'.
2025-05-22 20:06:10,162 - INFO - app.py:252 - Qdrant vector store 'nepal_constitution_streamlit_v5_explained' is now ready for use by LangChain.
2025-05-22 20:06:10,162 - INFO - app.py:354 - Backend: Creating conversational AI chain...
2025-05-22 20:06:10,163 - INFO - app.py:257 - Setting up the conversational AI chain...
2025-05-22 20:06:11,167 - INFO - app.py:312 - Conversational AI chain created successfully.
2025-05-22 20:06:11,169 - INFO - app.py:356 - Streamlit: Chatbot backend initialized successfully and cached.
2025-05-22 20:07:15,149 - INFO - app.py:423 - Streamlit UI: User asked: 'What are the rights to freedom?'
2025-05-22 20:07:15,149 - INFO - app.py:319 - Sending question to AI: 'What are the rights to freedom?' (History length: 0 turns)
2025-05-22 20:10:36,960 - INFO - app.py:423 - Streamlit UI: User asked: 'Is there a right to information?'
2025-05-22 20:10:36,961 - INFO - app.py:319 - Sending question to AI: 'Is there a right to information?' (History length: 1 turns)
2025-05-22 20:11:20,216 - INFO - app.py:423 - Streamlit UI: User asked: 'How is the President elected?'
2025-05-22 20:11:20,217 - INFO - app.py:319 - Sending question to AI: 'How is the President elected?' (History length: 2 turns)
2025-05-22 20:13:12,875 - INFO - app.py:423 - Streamlit UI: User asked: 'What does the constitution say about foreign policy?'
2025-05-22 20:13:12,876 - INFO - app.py:319 - Sending question to AI: 'What does the constitution say about foreign policy?' (History length: 3 turns)
2025-05-22 20:14:18,931 - INFO - app.py:423 - Streamlit UI: User asked: 'What do you think is the most important part of the constitution?'
2025-05-22 20:14:18,932 - INFO - app.py:319 - Sending question to AI: 'What do you think is the most important part of the constitution?' (History length: 4 turns)
2025-05-22 20:16:00,835 - INFO - app.py:423 - Streamlit UI: User asked: 'Tell me everything.'
2025-05-22 20:16:00,836 - INFO - app.py:319 - Sending question to AI: 'Tell me everything.' (History length: 5 turns)
2025-05-22 20:17:59,026 - INFO - app.py:423 - Streamlit UI: User asked: 'How to make an apple pie?'
2025-05-22 20:17:59,026 - INFO - app.py:319 - Sending question to AI: 'How to make an apple pie?' (History length: 6 turns)
2025-05-22 23:24:45,453 - INFO - app.py:342 - Streamlit: Starting initialization of the chatbot backend...
2025-05-22 23:24:45,455 - INFO - app.py:347 - Backend: Extracting and splitting PDF document...
2025-05-22 23:24:45,455 - INFO - app.py:61 - Starting PDF extraction from: Constitution-of-Nepal.pdf
2025-05-22 23:24:49,102 - INFO - app.py:91 - Successfully extracted text from 240 pages in 'Constitution-of-Nepal.pdf'.
2025-05-22 23:24:49,102 - INFO - app.py:95 - Splitting extracted documents into smaller chunks...
2025-05-22 23:24:49,115 - INFO - app.py:103 - Split documents into 586 chunks.
2025-05-22 23:24:49,116 - INFO - app.py:356 - Backend: Setting up Qdrant vector store...
2025-05-22 23:24:49,117 - INFO - app.py:108 - Setting up Qdrant vector store. Collection name: 'nepal_constitution_streamlit_v6_feedback'
2025-05-22 23:24:50,552 - INFO - app.py:113 - Using OpenAI embedding model: 'text-embedding-ada-002' (Expected vector dimension: 1536)
2025-05-22 23:24:59,462 - ERROR - app.py:132 - Failed to connect to Qdrant or initial check failed: [WinError 10061] No connection could be made because the target machine actively refused it
2025-05-22 23:24:59,465 - CRITICAL - app.py:396 - Streamlit UI: Failed to initialize chatbot backend: Could not establish a connection with Qdrant at localhost:6333. Details: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\streamlit_app\venv\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\streamlit_app\venv\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\97798\AppData\Local\Programs\Python\Python312\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\streamlit_app\venv\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\http\api_client.py", line 129, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\97798\AppData\Local\Programs\Python\Python312\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\streamlit_app\venv\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\streamlit_app\app.py", line 126, in setup_qdrant_vector_store
    qdrant_db_client.get_collections() # Test connection
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\qdrant_client.py", line 2214, in get_collections
    return self._client.get_collections(**kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2571, in get_collections
    self.http.collections_api.get_collections().result
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 330, in get_collections
    return self._build_for_get_collections()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 159, in _build_for_get_collections
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\http\api_client.py", line 90, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\http\api_client.py", line 107, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\http\api_client.py", line 240, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\qdrant_client\http\api_client.py", line 131, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\streamlit_app\app.py", line 388, in run_constitution_chatbot_app
    ai_conversation_handler = initialize_chatbot_backend()
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 219, in __call__
    return self._get_or_create_cached_value(args, kwargs, spinner_message)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 261, in _get_or_create_cached_value
    return self._handle_cache_miss(cache, value_key, func_args, func_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\venv\Lib\site-packages\streamlit\runtime\caching\cache_utils.py", line 320, in _handle_cache_miss
    computed_value = self._info.func(*func_args, **func_kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\app.py", line 357, in initialize_chatbot_backend
    qdrant_knowledge_base = setup_qdrant_vector_store(text_chunks_from_pdf, OPENAI_API_KEY)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\streamlit_app\app.py", line 133, in setup_qdrant_vector_store
    raise ConnectionError(f"Could not establish a connection with Qdrant at {processed_host}:{QDRANT_PORT}. Details: {e}")
ConnectionError: Could not establish a connection with Qdrant at localhost:6333. Details: [WinError 10061] No connection could be made because the target machine actively refused it
2025-05-22 23:30:23,831 - INFO - app.py:342 - Streamlit: Starting initialization of the chatbot backend...
2025-05-22 23:30:23,831 - INFO - app.py:347 - Backend: Extracting and splitting PDF document...
2025-05-22 23:30:23,831 - INFO - app.py:61 - Starting PDF extraction from: Constitution-of-Nepal.pdf
2025-05-22 23:30:27,828 - INFO - app.py:91 - Successfully extracted text from 240 pages in 'Constitution-of-Nepal.pdf'.
2025-05-22 23:30:27,829 - INFO - app.py:95 - Splitting extracted documents into smaller chunks...
2025-05-22 23:30:27,858 - INFO - app.py:103 - Split documents into 586 chunks.
2025-05-22 23:30:27,859 - INFO - app.py:356 - Backend: Setting up Qdrant vector store...
2025-05-22 23:30:27,860 - INFO - app.py:108 - Setting up Qdrant vector store. Collection name: 'nepal_constitution_streamlit_v6_feedback'
2025-05-22 23:30:29,199 - INFO - app.py:113 - Using OpenAI embedding model: 'text-embedding-ada-002' (Expected vector dimension: 1536)
2025-05-22 23:30:30,076 - INFO - app.py:127 - Successfully connected to Qdrant server at localhost:6333.
2025-05-22 23:30:30,109 - INFO - app.py:171 - Collection 'nepal_constitution_streamlit_v6_feedback' does not exist. Creating new collection.
2025-05-22 23:30:30,594 - INFO - app.py:202 - Populating Qdrant collection 'nepal_constitution_streamlit_v6_feedback'. This may take time and incur API costs.
2025-05-22 23:30:30,595 - INFO - app.py:207 - Requesting embeddings for 586 chunks from OpenAI...
2025-05-22 23:30:39,936 - INFO - app.py:209 - Successfully received 586 embeddings from OpenAI.
2025-05-22 23:30:39,970 - INFO - app.py:230 - Adding 586 points to Qdrant collection 'nepal_constitution_streamlit_v6_feedback'...
2025-05-22 23:30:40,313 - INFO - app.py:240 - Upserted batch 1 of 6 to Qdrant.
2025-05-22 23:30:40,708 - INFO - app.py:240 - Upserted batch 2 of 6 to Qdrant.
2025-05-22 23:30:41,003 - INFO - app.py:240 - Upserted batch 3 of 6 to Qdrant.
2025-05-22 23:30:41,354 - INFO - app.py:240 - Upserted batch 4 of 6 to Qdrant.
2025-05-22 23:30:41,651 - INFO - app.py:240 - Upserted batch 5 of 6 to Qdrant.
2025-05-22 23:30:41,922 - INFO - app.py:240 - Upserted batch 6 of 6 to Qdrant.
2025-05-22 23:30:41,923 - INFO - app.py:241 - All points successfully added to Qdrant.
2025-05-22 23:30:41,923 - INFO - app.py:256 - Qdrant vector store 'nepal_constitution_streamlit_v6_feedback' is now ready for use by LangChain.
2025-05-22 23:30:41,952 - INFO - app.py:358 - Backend: Creating conversational AI chain...
2025-05-22 23:30:41,952 - INFO - app.py:261 - Setting up the conversational AI chain...
2025-05-22 23:30:42,733 - INFO - app.py:316 - Conversational AI chain created successfully.
2025-05-22 23:30:42,733 - INFO - app.py:360 - Streamlit: Chatbot backend initialized successfully and cached.
2025-05-22 23:30:59,075 - INFO - app.py:448 - Feedback: Liked answer (index 0): 'Namaste! How can I assist you with the Constitutio...'
2025-05-22 23:41:25,767 - INFO - app.py:338 - Streamlit: Starting initialization of the chatbot backend...
2025-05-22 23:41:25,768 - INFO - app.py:343 - Backend: Extracting and splitting PDF document...
2025-05-22 23:41:25,769 - INFO - app.py:62 - Starting PDF extraction from: Constitution-of-Nepal.pdf
2025-05-22 23:41:30,421 - INFO - app.py:92 - Successfully extracted text from 240 pages in 'Constitution-of-Nepal.pdf'.
2025-05-22 23:41:30,422 - INFO - app.py:96 - Splitting extracted documents into smaller chunks...
2025-05-22 23:41:30,444 - INFO - app.py:104 - Split documents into 586 chunks.
2025-05-22 23:41:30,445 - INFO - app.py:352 - Backend: Setting up Qdrant vector store...
2025-05-22 23:41:30,445 - INFO - app.py:109 - Setting up Qdrant vector store. Collection name: 'nepal_constitution_streamlit_v7_global_feedback'
2025-05-22 23:41:31,959 - INFO - app.py:114 - Using OpenAI embedding model: 'text-embedding-ada-002' (Expected vector dimension: 1536)
2025-05-22 23:41:32,999 - INFO - app.py:125 - Successfully connected to Qdrant server at localhost:6333.
2025-05-22 23:41:33,033 - INFO - app.py:165 - Collection 'nepal_constitution_streamlit_v7_global_feedback' does not exist. Creating new collection.
2025-05-22 23:41:34,043 - INFO - app.py:198 - Populating Qdrant collection 'nepal_constitution_streamlit_v7_global_feedback'. This may take time and incur API costs.
2025-05-22 23:41:34,045 - INFO - app.py:203 - Requesting embeddings for 586 chunks from OpenAI...
2025-05-22 23:41:42,042 - INFO - app.py:205 - Successfully received 586 embeddings from OpenAI.
2025-05-22 23:41:42,082 - INFO - app.py:226 - Adding 586 points to Qdrant collection 'nepal_constitution_streamlit_v7_global_feedback'...
2025-05-22 23:41:42,703 - INFO - app.py:236 - Upserted batch 1 of 6 to Qdrant.
2025-05-22 23:41:43,237 - INFO - app.py:236 - Upserted batch 2 of 6 to Qdrant.
2025-05-22 23:41:43,769 - INFO - app.py:236 - Upserted batch 3 of 6 to Qdrant.
2025-05-22 23:41:44,690 - INFO - app.py:236 - Upserted batch 4 of 6 to Qdrant.
2025-05-22 23:41:45,253 - INFO - app.py:236 - Upserted batch 5 of 6 to Qdrant.
2025-05-22 23:41:45,720 - INFO - app.py:236 - Upserted batch 6 of 6 to Qdrant.
2025-05-22 23:41:45,721 - INFO - app.py:237 - All points successfully added to Qdrant.
2025-05-22 23:41:45,722 - INFO - app.py:252 - Qdrant vector store 'nepal_constitution_streamlit_v7_global_feedback' is now ready for use by LangChain.
2025-05-22 23:41:45,743 - INFO - app.py:354 - Backend: Creating conversational AI chain...
2025-05-22 23:41:45,744 - INFO - app.py:257 - Setting up the conversational AI chain...
2025-05-22 23:41:46,756 - INFO - app.py:312 - Conversational AI chain created successfully.
2025-05-22 23:41:46,757 - INFO - app.py:356 - Streamlit: Chatbot backend initialized successfully and cached.
2025-05-22 23:42:21,201 - INFO - app.py:477 - Streamlit UI: User asked: 'How is the President of Nepal elected?'
2025-05-22 23:42:21,201 - INFO - app.py:319 - Sending question to AI: 'How is the President of Nepal elected?' (History length: 0 turns)
2025-05-22 23:43:18,627 - INFO - app.py:450 - Global Feedback: Liked response ID ai_resp_3 - 'The President of Nepal is elected by an electoral ...'
